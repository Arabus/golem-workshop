---
- name: Tune sysctl settings
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    sysctl_set: yes
    state: present
  with_items:
    # Default: 8192 ;; required for docker
    - {name: fs.inotify.max_user_watches, value: 1048576}
    # Default: 0 ;; required for docker networking
    - {name: net.ipv4.ip_forward, value: 1}
    #  Default: 60 ;; we don't have swap
    - {name: vm.swappiness, value: 0}
    # see https://kubedex.com/90-days-of-aws-eks-in-production/
    - {name: net.ipv4.ip_local_port_range, value: 1025 65535}
    - {name: net.ipv4.tcp_tw_reuse, value: 1}
    - {name: net.ipv4.tcp_fin_timeout, value: 15}
    - {name: net.core.somaxconn, value: 4096}
    - {name: net.core.netdev_max_backlog, value: 4096}
    - {name: net.core.rmem_max, value: 16777216}
    - {name: net.core.wmem_max, value: 16777216}
    - {name: net.ipv4.tcp_max_syn_backlog, value: 20480}
    - {name: net.ipv4.tcp_max_tw_buckets, value: 400000}
    - {name: net.ipv4.tcp_no_metrics_save, value: 1}
    - {name: net.ipv4.tcp_rmem, value: 4096 87380 16777216}
    - {name: net.ipv4.tcp_syn_retries, value: 2}
    - {name: net.ipv4.tcp_synack_retries, value: 2}
    - {name: net.ipv4.tcp_wmem, value: 4096 65536 16777216}
    - {name: net.netfilter.nf_conntrack_max, value: 262144}
    - {name: net.netfilter.nf_conntrack_tcp_timeout_established, value: 86400}
    - {name: net.ipv4.neigh.default.gc_thresh1, value: 8096}
    - {name: net.ipv4.neigh.default.gc_thresh2, value: 12288}
    - {name: net.ipv4.neigh.default.gc_thresh3, value: 16384}

- name: Add ansible user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: "docker"
    shell: /bin/bash
    append: yes

- name: create systemd docker.service.d directory
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory

- name: Configure docker.service
  template:
    src: docker-systemd.j2
    dest: /etc/systemd/system/docker.service.d/docker.conf
    owner: root
    group: root
    mode: 0644
  register: docker_configuration
  notify: Restart docker

- name: Ensure Docker has state started and enabled on boot.
  service:
    name: "docker"
    state: started
    enabled: yes

- name: Restart docker now to activate the new config
  systemd:
    name: docker
    state: restarted
    daemon_reload: yes
  when: docker_configuration.changed

- name: Install kubectl bash completion
  shell: "kubectl completion bash >/etc/bash_completion.d/kubectl.sh"
  args:
    creates: /etc/bash_completion.d/kubectl.sh

- name: Chmod kubectl bash completion file
  file:
    path: /etc/bash_completion.d/kubectl.sh
    owner: root
    group: root
    mode: 0755

- name: Include group specifc kube master vars
  include_tasks: configure-master.yml
  when: inventory_hostname in groups['master']

- name: Include group specifc kube worker vars
  include_tasks: configure-worker.yml
  when: inventory_hostname in groups['worker']
